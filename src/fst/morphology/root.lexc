! Divvun & Giellatekno - open source grammars for Veps language 
! Copyright © 2015 The University of Tromsø & the Norwegian Sámi Parliament 
! http://giellatekno.uit.no & http://divvun.no 
! 
! This program is free software; you can redistribute and/or modify 
! this file under the terms of the GNU General Public License as published by 
! the Free Software Foundation, either version 3 of the License, or 
! (at your option) any later version. The GNU General Public License 
! is found at http://www.gnu.org/licenses/gpl.html. It is 
! also available in the file $GTHOME/LICENSE.txt. 
! 
! Other licensing options are available upon request, please contact 
! giellatekno@uit.no or feedback@divvun.no 
 
 
!! # Multichar_Symbols and *Root* lexicon for Veps 
 
Multichar_Symbols 
 
!! ## Miscellaneuos tags

!! Thes are  to be evaluated (are they in use?)
!! TODO: Have a look at these: 
 
+Arab             !!≈ * **@CODE@** 
+CLBfinal          !!≈ * **@CODE@** 
+Cmp             !!≈ * **@CODE@** 
+CmpNP/First       !!≈ * **@CODE@** 
+CmpNP/None          !!≈ * **@CODE@** 
+Cmp/SplitR          !!≈ * **@CODE@** 
+Cmp/Hyph          !!≈ * **@CODE@** 
+Coll             !!≈ * **@CODE@** 
+Com             !!≈ * **@CODE@** 
+Err/Hyph          !!≈ * **@CODE@** 
+Err/Lex          !!≈ * **@CODE@** 
+Err/SpaceCmp       !!≈ * **@CODE@** 
+Err/MissingSpace   !!≈ * **@CODE@** 
+MWE             !!≈ * **@CODE@** 
+OLang/ENG          !!≈ * **@CODE@** 
+OLang/FIN          !!≈ * **@CODE@** 
+OLang/NNO          !!≈ * **@CODE@** 
+OLang/NOB          !!≈ * **@CODE@** 
+OLang/RUS          !!≈ * **@CODE@** 
+OLang/SMA          !!≈ * **@CODE@** 
+OLang/SME          !!≈ * **@CODE@** 
+OLang/SWE          !!≈ * **@CODE@** 
+OLang/UND          !!≈ * **@CODE@** 
+Prf             !!≈ * **@CODE@** 
+PrfPrs             !!≈ * **@CODE@** 
+Rom             !!≈ * **@CODE@** 

+Use/-PMatch       !!≈ * **@CODE@** 
+Use/Circ          !!≈ * **@CODE@** 
+Use/NG             !!≈ * **@CODE@** 
+Use/PMatch          !!≈ * **@CODE@** 
+Use/SpellNoSugg    !!≈ * **@CODE@**
 +Use/TTS          !!≈ * **@CODE@** – **only** retained in the HFST Text-To-Speech disambiguation tokeniser
 +Use/-TTS         !!≈ * **@CODE@** – **never** retained in the HFST Text-To-Speech disambiguation tokeniser

+v1                !!≈ * **@CODE@** 
+v2                !!≈ * **@CODE@** 
+v3                !!≈ * **@CODE@** 
+v4                !!≈ * **@CODE@** 
@C.ErrOrth@          !!≈ * **@CODE@** 
@D.ErrOrth.ON@       !!≈ * **@CODE@** 
@P.ErrOrth.ON@       !!≈ * **@CODE@** 
 
 
 
!! ## Grammatical tags 
 
 
!! The morphological analyses of wordforms of Veps are presented 
!! in this system in terms of the following symbols. 
!! (It is highly suggested to follow existing standards when adding new tags). 

!! ### The parts-of-speech 
 +A      !!≈ * **@CODE@**  = adjective 
 +Adp    !!≈ * **@CODE@**  = adposition 
 +Adv    !!≈ * **@CODE@**  = adverb 
 +CS     !!≈ * **@CODE@**  = subordinating conjunction 
 +CC     !!≈ * **@CODE@**  = coordinating conjunction 
 +Interj !!≈ * **@CODE@**  = interjection 
 +N      !!≈ * **@CODE@**  = noun 
 +Num    !!≈ * **@CODE@**  = numeral 
 +Pcle   !!≈ * **@CODE@**  = particle 
 +Pr     !!≈ * **@CODE@**  = preposition 
 +Po     !!≈ * **@CODE@**  = postposition 
 +Pron   !!≈ * **@CODE@**  = pronoun 
 +Qnt    !!≈ * **@CODE@**  = quantifier 
 +V      !!≈ * **@CODE@**  = verb 
 
!! ### Subtags 
 
!! ### Noun subtags 
 
 +Prop  !!≈ * **@CODE@**  = proper 
 
!! #### Pronoun tags 
 
 +Dem   !!≈ * **@CODE@**  = demonstrative 
 +Indef !!≈ * **@CODE@**  = indefinite 
 +Interr !!≈ * **@CODE@**  = interrogative 
 +Pers   !!≈ * **@CODE@**  = personal 
 +Recipr !!≈ * **@CODE@**  = reciprocal 
 +Refl   !!≈ * **@CODE@**  = reflexive 
 +Rel    !!≈ * **@CODE@**  = relative 
 
!! #### Verb tags 
!! ##### Voice and transitivity

+Aux !!≈ * **@CODE@**  = auxiliary verb
+Act !!≈ * **@CODE@**  = active voice 
+Pss !!≈ * **@CODE@**  = passive voice 
 +TV   !!≈ * **@CODE@** = transitive and
 +IV  !!≈ * **@CODE@**  = intransitive verbs
 
!! ##### Verb moods are: 
 
 +Cond !!≈ * **@CODE@**  = conditional 
 +Ind !!≈ * **@CODE@**  = indicative 
 +Imprt !!≈ * **@CODE@**  = imperative 
 
!! ##### Tenses 
 +Prs   !!≈ * **@CODE@**  = 
  +Prt               !!≈ * **@CODE@**  = 
 +Pos               !!≈ * **@CODE@**  = 
 
!! ##### Verb personal forms are: 
 
+Sg1      !!≈ * **@CODE@** Singular First Person 
+Sg2      !!≈ * **@CODE@** Singular Second Person 
+Sg3      !!≈ * **@CODE@** Singular Third Person 
+Pl1      !!≈ * **@CODE@** Plural First Person 
+Pl2      !!≈ * **@CODE@** Plural Second Person 
+Pl3      !!≈ * **@CODE@** Plural Third Person 
 +RcSg1   !!≈ * **@CODE@** 
+RcSg2    !!≈ * **@CODE@** 
+RcSg3    !!≈ * **@CODE@** 
+RcPl1    !!≈ * **@CODE@** 
+RcPl2    !!≈ * **@CODE@** 
+RcPl3   !!≈ * **@CODE@**  = 
+RcSg    !!≈ * **@CODE@** 
+RcPl    !!≈ * **@CODE@** 
+ScSg    !!≈ * **@CODE@** 
+ScPl         !!≈ * **@CODE@**  = 
 
!! ##### Other verb forms are 
 
 +Inf   !!≈ * **@CODE@** 
+Ger  !!≈ * **@CODE@** 
+Neg                 !!≈ * **@CODE@**  = 
 +ConNeg   !!≈ * **@CODE@** 
 +ConNegII              !!≈ * **@CODE@**  = 
 +ImprtII            !!≈ * **@CODE@**  = 
 +PrsPrc   !!≈ * **@CODE@** 
 +PrfPrc                !!≈ * **@CODE@**  = nu 
 +Sup   !!≈ * **@CODE@** 
 +VGen   !!≈ * **@CODE@** 
 +VAbess             !!≈ * **@CODE@**  = 

 
!! #### Nominal tags
 
 +Sg !!≈ * **@CODE@**  = singular 
 +Pl !!≈ * **@CODE@**  = plural 
 +Abe !!≈ * **@CODE@**  = abessive 
 +Acc !!≈ * **@CODE@**  = accusative 
 +Abl !!≈ * **@CODE@**  = ablative case 
 +Ade !!≈ * **@CODE@**  = adessive 
 +All !!≈ * **@CODE@**  = allative 
 +Dat !!≈ * **@CODE@**  = dative case 
 +Ela !!≈ * **@CODE@**  = elative 
 +Ess !!≈ * **@CODE@**  = essive 
 +Exe !!≈ * **@CODE@**  = essive 
 +Gen !!≈ * **@CODE@**  = genitive case 
 +Ill !!≈ * **@CODE@**  = illative 
 +Ine !!≈ * **@CODE@**  = inessive 
 +Ins !!≈ * **@CODE@**  = instrumental 
 +Instr !!≈ * **@CODE@**  = instructive -IN 
 +Lat !!≈ * **@CODE@**  = Lative 
 +Loc !!≈ * **@CODE@**  = Locative 
 +Nom !!≈ * **@CODE@**  = nominative case 
 +Par !!≈ * **@CODE@**  = partitive 
 +Prl !!≈ * **@CODE@**  = prolative 
 +Tra !!≈ * **@CODE@**  = translative 
 +Voc !!≈ * **@CODE@**  = Vocative 
 +Pros   !!≈ * **@CODE@**  = 
 +Adc   !!≈ * **@CODE@**  = 
 +Apr   !!≈ * **@CODE@**  = 
 +Egr    !!≈ * **@CODE@**  = 
 +Ter1   !!≈ * **@CODE@**  = 
+Ter2   !!≈ * **@CODE@**  = 
+Ter3   !!≈ * **@CODE@**  = 
+Add1   !!≈ * **@CODE@**  = 
+Add2   !!≈ * **@CODE@**  = 
 +Apr1   !!≈ * **@CODE@**  = 
+Apr2        !!≈ * **@CODE@**  = 
 +EssInst         !!≈ * **@CODE@**  = 
 
 
!! ##### Possessive suffixes: 
 
 +PxSg1   !!≈ * **@CODE@**  = 
+PxSg2   !!≈ * **@CODE@**  = 
+PxSg3                 !!≈ * **@CODE@**  = 
 +PxPl1   !!≈ * **@CODE@**  = 
+PxPl2   !!≈ * **@CODE@**  = 
+PxPl3                 !!≈ * **@CODE@**  = 
 
!! ##### Comparative tags: 
 
 +Comp    !!≈ * **@CODE@**  = 
 +Superl                 !!≈ * **@CODE@**  = 
 
!! #### Subtags for Numerals: 
 
 +Attr    !!≈ * **@CODE@**  = 
 +Card                !!≈ * **@CODE@**  = 
 +Ord                   !!≈ * **@CODE@**  = 
 
 
!! #### ADVERBS 
 +Manner !!≈ * **@CODE@**  = 
 +Spat  !!≈ * **@CODE@**  = 
 +Temp  !!≈ * **@CODE@**  = 
 
!! #### Abbreviated words are classified with: 
 
 +ABBR   !!≈ * **@CODE@** 
+Symbol !!≈ * **@CODE@**  = independent symbols in the text stream, like £, €, © 
 +ACR   !!≈ * **@CODE@**  = 
 
!! #### Special symbols are classified with: 
 
 +CLB  !!≈ * **@CODE@** 
+PUNCT  !!≈ * **@CODE@** 
+LEFT  !!≈ * **@CODE@** 
+RIGHT !!≈ * **@CODE@**  = 
 
!! #### Special multiword units are analysed with: 
 +Multi !!≈ * **@CODE@**  = 
 
!! #### Guess tag, used to catch new wores
 
 +Guess  !!≈ * **@CODE@**  = 
 
 
!! #### Question and Focus particles: 
 
 +Qst   !!≈ * **@CODE@** 
 +Foc       !!≈ * **@CODE@**  = 
+Clt          !!≈ * **@CODE@**  = 
+Foc/i          !!≈ * **@CODE@**  = perhaps +Addative
+Foc/ki          !!≈ * **@CODE@**  = 
+Foc/žo          !!≈ * **@CODE@**  = 
+Appr          !!≈ * **@CODE@**  = 
+Advc          !!≈ * **@CODE@**  = 
+Ter          !!≈ * **@CODE@**  = 
+Pro          !!≈ * **@CODE@**  = 
+Car           !!≈ * **@CODE@**  = 
+PstI          !!≈ * **@CODE@**  = 
+PstII          !!≈ * **@CODE@**  = 
 
!! #### Usage tags: 

 +Err/Orth                     !!≈ * **@CODE@**  = 
 +Use/-Spell                  !!≈ * **@CODE@**  = 
 

 
!! #### Semtags 
 +Sem/Mal   !!≈ * **@CODE@** 
 +Sem/Fem   !!≈ * **@CODE@** 
 +Sem/Sur    !!≈ * **@CODE@**  = 
 +Sem/Plc       !!≈ * **@CODE@**  = 
 +Sem/Org      !!≈ * **@CODE@**  = 
 +Sem/Obj      !!≈ * **@CODE@**  = 
 +Sem/Ani      !!≈ * **@CODE@**  = 
 +Sem/Hum      !!≈ * **@CODE@**  = 
 +Sem/Plant      !!≈ * **@CODE@**  = 
 +Sem/Group      !!≈ * **@CODE@**  = 
 +Sem/Time       !!≈ * **@CODE@**  = 
 +Sem/Txt      !!≈ * **@CODE@**  = 
 +Sem/Route      !!≈ * **@CODE@**  = 
 +Sem/Measr      !!≈ * **@CODE@**  = 
 +Sem/Wthr      !!≈ * **@CODE@**  = 
 +Sem/Build      !!≈ * **@CODE@**  = 
 +Sem/Edu      !!≈ * **@CODE@**  = 
 +Sem/Veh      !!≈ * **@CODE@**  = 
 +Sem/Clth      !!≈ * **@CODE@**  = 
 
!! #### More semtags 
+Sem/Amount          !!≈ * **@CODE@** 
+Sem/Build-room       !!≈ * **@CODE@** 
+Sem/Cat          !!≈ * **@CODE@** 
+Sem/Curr          !!≈ * **@CODE@** 
+Sem/Date          !!≈ * **@CODE@** 
+Sem/Domain          !!≈ * **@CODE@** 
+Sem/Domain_Hum       !!≈ * **@CODE@** 
+Sem/Dummytag       !!≈ * **@CODE@** 
+Sem/Edu_Hum       !!≈ * **@CODE@** 
+Sem/Event          !!≈ * **@CODE@** 
+Sem/Food-med       !!≈ * **@CODE@** 
+Sem/Group_Hum       !!≈ * **@CODE@** 
+Sem/ID             !!≈ * **@CODE@** 
+Sem/Lang          !!≈ * **@CODE@** 
+Sem/Mat          !!≈ * **@CODE@** 
+Sem/Money          !!≈ * **@CODE@** 
+Sem/Obj-el          !!≈ * **@CODE@** 
+Sem/Obj-ling       !!≈ * **@CODE@** 
+Sem/Org_Prod-audio !!≈ * **@CODE@** 
+Sem/Org_Prod-vis   !!≈ * **@CODE@** 
+Sem/Part          !!≈ * **@CODE@** 
+Sem/Prod-vis       !!≈ * **@CODE@** 
+Sem/Rule          !!≈ * **@CODE@** 
+Sem/Sign          !!≈ * **@CODE@** 
+Sem/State          !!≈ * **@CODE@** 
+Sem/State-sick       !!≈ * **@CODE@** 
+Sem/Substnc       !!≈ * **@CODE@** 
+Sem/Time-clock       !!≈ * **@CODE@** 
+Sem/Tool-it       !!≈ * **@CODE@** 
+Sem/Year          !!≈ * **@CODE@** 


!! #### Derivations  

!! Derivations are classified under the morphophonetic form of the suffix, the 
!! source and target part-of-speech. 

 +V→N   !!≈ * **@CODE@** 
 +V→V   !!≈ * **@CODE@** 
 +V→A     !!≈ * **@CODE@**  = 
+Der            !!≈ * **@CODE@**  =
+Der/NomAg	!!≈ * **@CODE@**  = tehta : tegii
+Der/Uz1                !!≈ * **@CODE@**  = sur»uz' A»N 
+Der/Ta          !!≈ * **@CODE@**  = 
+Der/Te          !!≈ * **@CODE@**  = 
+Der/ma          !!≈ * **@CODE@**  = 
+Der/Tu          !!≈ * **@CODE@**  = 
+Der/IA          !!≈ * **@CODE@**  = 
+Der/Toi  !!≈ * **@CODE@**  = nime»toi N»A 
+Der/Matoi  !!≈ * **@CODE@**  = V»A 
+Der/Mine  !!≈ * **@CODE@**  = V»N 
+Der/V	   !!≈ * **@CODE@**  = V»V
 
!! ### Morphophonology 
!  --------------- 
!! To represent phonologic variations in word forms we use the following 
!! symbols in the lexicon files: 
 
!! #### Archiphonemes and fluctuation symbols
%{eØ%} !!≈ * **@CODE@**  vowel loss in oiged:oiktan 
%{uØ%} !!≈ * **@CODE@**  vowel loss in sapug:sapkan 
%{iØ%} !!≈ * **@CODE@**  vowel loss in paltin:paltnan 
%{aØ%} !!≈ * **@CODE@**  vowel loss in samal:samlan 
%{oØ%} !!≈ * **@CODE@**  vowel loss in zerkol:zerklon 
 {aä}   !!≈ * **@CODE@** 
 {oö}   !!≈ * **@CODE@** 
 {uü}  !!≈ * **@CODE@** 
 
!! #### More archiphonemes (Protoletters for xfst)

%^DEVOICE     !!≈ * **@CODE@**  = haikta: haig
%^PEN       !!= * @CODE@  Control final vs penultimate
QAQ1   !!≈ * **@CODE@** 
QAO1   !!≈ * **@CODE@** 
QÄQ1   !!≈ * **@CODE@** 
EH1    !!≈ * **@CODE@** 
QEQ1   !!≈ * **@CODE@** 
INE1   !!≈ * **@CODE@** 
ZD1    !!≈ * **@CODE@** 
ZS1    !!≈ * **@CODE@** 
V1    !!≈ * **@CODE@** 
AO1    !!≈ * **@CODE@** 
A1    !!≈ * **@CODE@** 
EI1    !!≈ * **@CODE@** 
ZS1    !!≈ * **@CODE@** 
ZD1    !!≈ * **@CODE@**  These are for developing underlying morphology rules 
D1    !!≈ * **@CODE@** 
E1    !!≈ * **@CODE@** 
U1    !!≈ * **@CODE@** 
I1    !!≈ * **@CODE@** 
AÄ1    !!≈ * **@CODE@** 
OÖ1    !!≈ * **@CODE@** 
UY1    !!≈ * **@CODE@** 
V1    !!≈ * **@CODE@** 
V2    !!≈ * **@CODE@** 
V3    !!≈ * **@CODE@** 
 
!! #### And following triggers to control variation 
 
 {front}   !!≈ * **@CODE@** front vowel stems
 {back}  !!≈ * **@CODE@** back vowel stems
%^RmVow !!≈ * **@CODE@**  for removing vowels 
%^WGStem         !!≈ * **@CODE@** 
%^TS        !!≈ * **@CODE@** 
%^RVow       !!≈ * **@CODE@** 
 %^LVow       !!≈ * **@CODE@** 
 %^LCns       !!≈ * **@CODE@** 
%^WCns       !!≈ * **@CODE@** 
%^AtoO       !!≈ * **@CODE@** 
%^ÄtoÖ       !!≈ * **@CODE@** 
%^OddSyll      !!≈ * **@CODE@** 
%^StretchSyll2   !!≈ * **@CODE@** 
%^SyllBr      !!≈ * **@CODE@** 
%^E1       !!≈ * **@CODE@** 

!! #### Boundary symbols
 
%>      !!≈ * **@CODE@**  = 
%-      !!≈ * **@CODE@**  = 
 

 
!! ## Flag diacritics 

!! We have manually optimised the structure of our lexicon using following 
!! flag diacritics to restrict morhpological combinatorics - only allow compounds 
!! with verbs if the verb is further derived into a noun again: 

!! | Flag | Explanation 
!! | ---- | ----------- 
 @P.NeedNoun.ON@    !!≈ |  **@CODE@**  | (Dis)allow compounds with verbs unless nominalised 
 @D.NeedNoun.ON@    !!≈ |  **@CODE@**  | (Dis)allow compounds with verbs unless nominalised 
 @C.NeedNoun@       !!≈ |  **@CODE@**  | (Dis)allow compounds with verbs unless nominalised 
 
!! For languages that allow compounding, the following flag diacritics are needed 
!! to control position-based compounding restrictions for nominals. Their use is 
!! handled automatically if combined with +CmpN/xxx tags. If not used, they will 
!! do no harm. 
 
!! | Flag | Explanation 
!! | ---- | ----------- 
 @P.CmpFrst.FALSE@ !!≈ |  **@CODE@**  | Require that words tagged as such only appear first 
 @D.CmpPref.TRUE@  !!≈ |  **@CODE@**  | Block such words from entering ENDLEX 
 @P.CmpPref.FALSE@ !!≈ |  **@CODE@**  | Block these words from making further compounds 
 @D.CmpLast.TRUE@  !!≈ |  **@CODE@**  | Block such words from entering R 
 @D.CmpNone.TRUE@  !!≈ |  **@CODE@**  | Combines with the next tag to prohibit compounding 
 @U.CmpNone.FALSE@ !!≈ |  **@CODE@**  | Combines with the prev tag to prohibit compounding 
 @P.CmpOnly.TRUE@  !!≈ |  **@CODE@**  | Sets a flag to indicate that the word has passed R 
 @D.CmpOnly.FALSE@ !!≈ |  **@CODE@**  | Disallow words coming directly from root. 
 
!! Use the following flag diacritics to control downcasing of derived proper 
!! nouns (e.g. Finnish Pariisi -> pariisilainen). See e.g. North Sámi for how to use 
!! these flags. There exists a ready-made regex that will do the actual down-casing 
!! given the proper use of these flags. 
 
!! | Flag | Explanation 
!! | ---- | ----------- 
 @U.Cap.Obl@        !!≈ |  **@CODE@**  | Allowing downcasing of derived names: deatnulasj. 
 @U.Cap.Opt@        !!≈ |  **@CODE@**  | Allowing downcasing of derived names: deatnulasj. 

!! | Flag diacritic | Explanation
!! | :------------- |:-----------
@U.number.one@ !!≈ | @CODE@ | Flag used to give arabic numerals in smj different cases ;
@U.number.two@ !!≈ | @CODE@ | Flag used to give arabic numerals in smj different cases ;
@U.number.three@ !!≈ | @CODE@ | Flag used to give arabic numerals in smj different cases ;
@U.number.four@ !!≈ | @CODE@ | Flag used to give arabic numerals in smj different cases ;
@U.number.five@ !!≈ | @CODE@ | Flag used to give arabic numerals in smj different cases ;
@U.number.six@ !!≈ | @CODE@ | Flag used to give arabic numerals in smj different cases ;
@U.number.seven@ !!≈ | @CODE@ | Flag used to give arabic numerals in smj different cases ;
@U.number.eight@ !!≈ | @CODE@ | Flag used to give arabic numerals in smj different cases ;
@U.number.nine@ !!≈ | @CODE@ | Flag used to give arabic numerals in smj different cases ;
@U.number.zero@ !!≈ | @CODE@ | Flag used to give arabic numerals in smj different cases ;

@P.number.one@ !!≈ | @CODE@ | Flag used to give arabic numerals in smj different cases ;
@P.number.two@ !!≈ | @CODE@ | Flag used to give arabic numerals in smj different cases ;
@P.number.three@ !!≈ | @CODE@ | Flag used to give arabic numerals in smj different cases ;
@P.number.four@ !!≈ | @CODE@ | Flag used to give arabic numerals in smj different cases ;
@P.number.five@ !!≈ | @CODE@ | Flag used to give arabic numerals in smj different cases ;
@P.number.six@ !!≈ | @CODE@ | Flag used to give arabic numerals in smj different cases ;
@P.number.seven@ !!≈ | @CODE@ | Flag used to give arabic numerals in smj different cases ;
@P.number.eight@ !!≈ | @CODE@ | Flag used to give arabic numerals in smj different cases ;
@P.number.nine@ !!≈ | @CODE@ | Flag used to give arabic numerals in smj different cases ;
@P.number.ten@ !!≈ | @CODE@ | Flag used to give arabic numerals in smj different cases ;
@P.number.zero@ !!≈ | @CODE@ | Flag used to give arabic numerals in smj different cases ;


!! ## Lexc lexica

!! ### Root lexicon

LEXICON Root 
!! The word forms in Veps start from the lexeme roots of basic 
!! word classes. 
  adjectives    ; 
  adpositions    ; 
  adverbs       ; 
  conjuncts     ; 
  interjections ; 
!  NounRoot      ; <no lexicon by this name seems to exist 20230620>
  nouns  ;
  propernouns  ;
  quantifiers   ; 
  verbs         ; 
  Abbreviation  ; ! stems/abbr.lexc 
  Acronym       ; ! stems/acro.lexc 
  Punctuation   ; 
  Symbols       ; 
  Numerals     ; 
  A_NEWWORDS    ; 
  N_NEWWORDS    ;  !This is where to put incoming new nouns 20240403
  PROP_NEWWORDS ;  !This is where to put incoming new proper nouns 20240403 
  V_NEWWORDS    ; 
! SUBJUNCTION   ; 
  PRONOUN-TYPES ; 

!! ### Other lexica

LEXICON CC_ 
!! @LEXNAME@ 
 # ; 
 
LEXICON CS_ 
!! @LEXNAME@ 
 # ; 
 
! LEXICON SUBJUNCTION 
!  # ; 
 
LEXICON INTERJ_ 
!! @LEXNAME@ 
 # ; 
 
! Not used 
! LEXICON NUMERAL 
!  # ; 
 
LEXICON NUMBERSUF 
!! @LEXNAME@ 
: K; 
:%> CASESUF ; 
:%> ORDINAL ; 
 
LEXICON ORDINAL 
!! @LEXNAME@ 
+Ord:этӥ K; 
 
 
! Not used 
! LEXICON PUNCTUATION 
!  # ; 
 
LEXICON CADJ 
!! @LEXNAME@ 
+A: #; 
LEXICON DADJ 
!! @LEXNAME@ 
+A: #; 
LEXICON VADJ 
!! @LEXNAME@ 
+A: #; 
 
LEXICON ADV_ 
!! @LEXNAME@ 
: # ; 
 
LEXICON ADV_MANNER 
!! @LEXNAME@ 
+Manner: K ; 
 
LEXICON ADV_LAT !sinna
!! @LEXNAME@ 
 K ; 
LEXICON ADV_SPAT
!! @LEXNAME@ 
+Spat: K ; 

LEXICON ADV_TEMP 
!! @LEXNAME@ 
+Temp: K ; 

LEXICON PO_
 K ;
LEXICON PO_ADE
+Ade: K ;
LEXICON PO_ILL
+Ill: K ;
LEXICON PO_INE
+Ine: K ;

LEXICON CASESUF #; 
!! @LEXNAME@ 
LEXICON PRON #; 
!! @LEXNAME@ 
LEXICON DEM #; 
!! @LEXNAME@ 
LEXICON ENDLEX # ; 
 
! vim: set ft=xfst-lexc: 
